<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0.3 (Python 3.8.10 on win32)" generated="20210717 22:48:00.261" rpa="false" schemaversion="2">
<suite id="s1" name="Datos &amp; Insertar Datos">
<suite id="s1-s1" name="Datos" source="C:\Users\EQ01\Desktop\RobotFrameowrk\SQL_ACCEPTANCE_TEST\test_cases\datos">
<suite id="s1-s1-s1" name="Insertar Datos" source="C:\Users\EQ01\Desktop\RobotFrameowrk\SQL_ACCEPTANCE_TEST\test_cases\datos\insertar_datos.robot">
<kw name="SetupTest" library="setup_test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${environment}' == 'local'</arg>
<arg>Connect to database local</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Connect to database local" library="connection_database_local">
<kw name="Get Library Instance" library="BuiltIn">
<var>${lib}</var>
<arg>configure</arg>
<doc>Returns the currently active instance of the specified test library.</doc>
<msg timestamp="20210717 22:48:00.334" level="INFO">${lib} = &lt;module 'configure' from 'C:\\Users\\EQ01\\Desktop\\RobotFrameowrk\\SQL_ACCEPTANCE_TEST\\resources\\configure.py'&gt;</msg>
<status status="PASS" starttime="20210717 22:48:00.334" endtime="20210717 22:48:00.334"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${config}</var>
<arg>${lib}</arg>
<arg>get_variables</arg>
<arg>local</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20210717 22:48:00.335" level="INFO">DBCONFIG(user='postgres', pwd='admin')</msg>
<msg timestamp="20210717 22:48:00.335" level="INFO">${config} = {'dbconfig': DBCONFIG(user='postgres', pwd='admin')}</msg>
<status status="PASS" starttime="20210717 22:48:00.334" endtime="20210717 22:48:00.335"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DBUser}</var>
<arg>${config['dbconfig'].user}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210717 22:48:00.336" level="INFO">${DBUser} = postgres</msg>
<status status="PASS" starttime="20210717 22:48:00.335" endtime="20210717 22:48:00.336"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DBPass}</var>
<arg>${config['dbconfig'].pwd}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210717 22:48:00.337" level="INFO">${DBPass} = admin</msg>
<status status="PASS" starttime="20210717 22:48:00.336" endtime="20210717 22:48:00.337"/>
</kw>
<kw name="Connect To Database" library="DatabaseLibrary">
<var>${output}</var>
<var>${output}</var>
<arg>psycopg2</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20210717 22:48:00.351" level="INFO">Connecting using : psycopg2.connect(database=practice01, user=postgres, password=admin, host=localhost, port=5432) </msg>
<msg timestamp="20210717 22:48:00.405" level="INFO">${output} = None</msg>
<msg timestamp="20210717 22:48:00.405" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20210717 22:48:00.337" endtime="20210717 22:48:00.405"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210717 22:48:00.405" endtime="20210717 22:48:00.406"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.333" endtime="20210717 22:48:00.406"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.333" endtime="20210717 22:48:00.406"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.332" endtime="20210717 22:48:00.406"/>
</kw>
<test id="s1-s1-s1-t1" name="Insertar data en tabla persona">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>INSERT INTO persona VALUES('Yese','Londoño',500)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20210717 22:48:00.407" level="INFO">Executing : Execute SQL String  |  INSERT INTO persona VALUES('Yese','Londoño',500) </msg>
<msg timestamp="20210717 22:48:00.412" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20210717 22:48:00.407" endtime="20210717 22:48:00.412"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210717 22:48:00.413" endtime="20210717 22:48:00.413"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210717 22:48:00.414" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210717 22:48:00.414" endtime="20210717 22:48:00.414"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.406" endtime="20210717 22:48:00.415"/>
</test>
<test id="s1-s1-s1-t2" name="Check If Exists In DB - Victor Florez">
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<arg>SELECT * FROM persona WHERE nombre = 'Victor';</arg>
<doc>Check if any row would be returned by given the input `selectStatement`. If there are no results, then this will
throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction
commit or rollback.</doc>
<msg timestamp="20210717 22:48:00.417" level="INFO">Executing : Check If Exists In Database  |  SELECT * FROM persona WHERE nombre = 'Victor'; </msg>
<msg timestamp="20210717 22:48:00.417" level="INFO">Executing : Query  |  SELECT * FROM persona WHERE nombre = 'Victor'; </msg>
<status status="PASS" starttime="20210717 22:48:00.417" endtime="20210717 22:48:00.420"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.416" endtime="20210717 22:48:00.421"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20210717 22:48:00.422" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20210717 22:48:00.422" endtime="20210717 22:48:00.423"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.284" endtime="20210717 22:48:00.423"/>
</suite>
<status status="PASS" starttime="20210717 22:48:00.282" endtime="20210717 22:48:00.425"/>
</suite>
<suite id="s1-s2" name="Insertar Datos" source="C:\Users\EQ01\Desktop\RobotFrameowrk\SQL_ACCEPTANCE_TEST\test_cases\datos\insertar_datos.robot">
<kw name="SetupTest" library="setup_test" type="SETUP">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${environment}' == 'local'</arg>
<arg>Connect to database local</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Connect to database local" library="connection_database_local">
<kw name="Get Library Instance" library="BuiltIn">
<var>${lib}</var>
<arg>configure</arg>
<doc>Returns the currently active instance of the specified test library.</doc>
<msg timestamp="20210717 22:48:00.438" level="INFO">${lib} = &lt;module 'configure' from 'C:\\Users\\EQ01\\Desktop\\RobotFrameowrk\\SQL_ACCEPTANCE_TEST\\resources\\configure.py'&gt;</msg>
<status status="PASS" starttime="20210717 22:48:00.438" endtime="20210717 22:48:00.438"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<var>${config}</var>
<arg>${lib}</arg>
<arg>get_variables</arg>
<arg>local</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<msg timestamp="20210717 22:48:00.439" level="INFO">DBCONFIG(user='postgres', pwd='admin')</msg>
<msg timestamp="20210717 22:48:00.439" level="INFO">${config} = {'dbconfig': DBCONFIG(user='postgres', pwd='admin')}</msg>
<status status="PASS" starttime="20210717 22:48:00.438" endtime="20210717 22:48:00.439"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DBUser}</var>
<arg>${config['dbconfig'].user}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210717 22:48:00.440" level="INFO">${DBUser} = postgres</msg>
<status status="PASS" starttime="20210717 22:48:00.439" endtime="20210717 22:48:00.440"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${DBPass}</var>
<arg>${config['dbconfig'].pwd}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20210717 22:48:00.441" level="INFO">${DBPass} = admin</msg>
<status status="PASS" starttime="20210717 22:48:00.440" endtime="20210717 22:48:00.441"/>
</kw>
<kw name="Connect To Database" library="DatabaseLibrary">
<var>${output}</var>
<var>${output}</var>
<arg>psycopg2</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20210717 22:48:00.442" level="INFO">Connecting using : psycopg2.connect(database=practice01, user=postgres, password=admin, host=localhost, port=5432) </msg>
<msg timestamp="20210717 22:48:00.500" level="INFO">${output} = None</msg>
<msg timestamp="20210717 22:48:00.500" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20210717 22:48:00.441" endtime="20210717 22:48:00.500"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210717 22:48:00.501" endtime="20210717 22:48:00.501"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.437" endtime="20210717 22:48:00.502"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.437" endtime="20210717 22:48:00.502"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.436" endtime="20210717 22:48:00.502"/>
</kw>
<test id="s1-s2-t1" name="Insertar data en tabla persona">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>INSERT INTO persona VALUES('Yese','Londoño',500)</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20210717 22:48:00.503" level="INFO">Executing : Execute SQL String  |  INSERT INTO persona VALUES('Yese','Londoño',500) </msg>
<msg timestamp="20210717 22:48:00.508" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20210717 22:48:00.503" endtime="20210717 22:48:00.508"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20210717 22:48:00.509" endtime="20210717 22:48:00.509"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20210717 22:48:00.510" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210717 22:48:00.510" endtime="20210717 22:48:00.510"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.502" endtime="20210717 22:48:00.511"/>
</test>
<test id="s1-s2-t2" name="Check If Exists In DB - Victor Florez">
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<arg>SELECT * FROM persona WHERE nombre = 'Victor';</arg>
<doc>Check if any row would be returned by given the input `selectStatement`. If there are no results, then this will
throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction
commit or rollback.</doc>
<msg timestamp="20210717 22:48:00.514" level="INFO">Executing : Check If Exists In Database  |  SELECT * FROM persona WHERE nombre = 'Victor'; </msg>
<msg timestamp="20210717 22:48:00.514" level="INFO">Executing : Query  |  SELECT * FROM persona WHERE nombre = 'Victor'; </msg>
<status status="PASS" starttime="20210717 22:48:00.514" endtime="20210717 22:48:00.517"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.513" endtime="20210717 22:48:00.517"/>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20210717 22:48:00.520" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20210717 22:48:00.520" endtime="20210717 22:48:00.520"/>
</kw>
<status status="PASS" starttime="20210717 22:48:00.427" endtime="20210717 22:48:00.520"/>
</suite>
<status status="PASS" starttime="20210717 22:48:00.262" endtime="20210717 22:48:00.523"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="0" skip="0" id="s1" name="Datos &amp; Insertar Datos">Datos &amp; Insertar Datos</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Datos">Datos &amp; Insertar Datos.Datos</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Insertar Datos">Datos &amp; Insertar Datos.Datos.Insertar Datos</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2" name="Insertar Datos">Datos &amp; Insertar Datos.Insertar Datos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
